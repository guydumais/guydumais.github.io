{"version":3,"sources":["webpack:///./src/components/PageThumbnail.jsx","webpack:///./src/templates/index.js"],"names":["locales","config","siteMetadata","FaFolderIcon","icon","faFolder","FaClockIcon","faClock","PageThumbnail","langKey","date","category","author","pageTitle","pageLink","pageImage","extraClass","children","className","to","fluid","alt","defaultLangKey","BlogIndexDataQuery","allMdx","data","useContext","LocalesContext","i18n","find","el","id","edges","node","frontmatter","name","fields","slug","title","featuredImage","childImageSharp","description"],"mappings":"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","file":"component---src-templates-index-js-d45af72bd483dc2b89d0.js","sourcesContent":["/**\r\n * PAGE THUMBNAIL\r\n */\r\n\r\n/**\r\n * Dependencies\r\n */\r\nimport React from 'react'\r\nimport { Link } from 'gatsby'\r\nimport Img from 'gatsby-image'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faFolder, faClock, faUserCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport config from'../../gatsby-config'\r\nconst { locales } = config.siteMetadata\r\n\r\n/**\r\n * FA ICON COMPONENTS.\r\n */\r\nconst FaFolderIcon = () => <FontAwesomeIcon icon={faFolder} />\r\nconst FaClockIcon = () => <FontAwesomeIcon icon={faClock} />\r\nconst FaUserIcon = () => <FontAwesomeIcon icon={faUserCircle} />\r\n\r\n/**\r\n * Component (JSX)\r\n *\r\n *  <div className={extraClass ? `pageThumb ${extraClass}` : `pageThumb`} role=\"nav\" onClick={event => {\r\n *    event.preventDefault()\r\n *    navigate(pageLink)\r\n *  }}>\r\n */\r\nconst PageThumbnail = ({langKey, date, author, category, pageTitle, pageLink, pageImage, extraClass, children}) => {\r\n\r\n  return (\r\n    <div className={extraClass ? `pageThumb ${extraClass}` : `pageThumb`}>\r\n      <Link to={pageLink}>{pageImage ? <Img fluid={pageImage} alt={pageTitle} /*style={{'max-height':'232px'}}*/ /> : <div className=\"empty\"/>}</Link>\r\n      {/*pageImage ? <img src={pageImage} alt={pageTitle}/> : <div className=\"empty\"/>*/}\r\n      <div className=\"text\">\r\n        <div className=\"postCategory\"><FaFolderIcon /> <Link to={langKey === locales.defaultLangKey ? `/${category}/` : `/${langKey}/${category}/`}>{category}</Link></div>\r\n        <h3><Link to={pageLink}>{pageTitle}</Link></h3>\r\n        <p>{children}</p>\r\n        <p className=\"timestamp\"><span className=\"postDate\"><FaClockIcon /> {date}</span>{/*<span className=\"author\"> <FaUserIcon /> {author}</span>*/}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default PageThumbnail\r\n","/**\r\n * BLOG INDEX TEMPLATE\r\n */\r\n\r\n/**\r\n * Dependencies.\r\n */\r\nimport React, { useContext } from 'react'\r\n//import { graphql, Link } from 'gatsby'\r\nimport { graphql } from 'gatsby'\r\n//import { MDXProvider } from \"@mdx-js/react\"\r\n//import { MDXRenderer } from \"gatsby-plugin-mdx\"\r\nimport { LocalesContext } from '../components/locales/LocalesContextProvider'\r\nimport PageThumbnail from '../components/PageThumbnail'\r\nimport '../styles/blog.css'\r\n\r\n/**\r\n * Template Component (JSX)\r\n */\r\nexport default ( { data:{allMdx} }) => {\r\n\r\n  //const metaDateOptions = { year: 'numeric', month: 'long', day: 'numeric' }\r\n  //const metaDate = mdx.frontmatter.date.toLocaleDateString(pageContext.langKey, metaDateOptions)\r\n\r\n  // Get the locales context\r\n  const { langKey, i18n } = useContext(LocalesContext)\r\n  const i18nData = i18n.find(el => el.langKey === langKey)\r\n  const { author } = i18nData.locales\r\n\r\n  // MDX Provider Shared Components\r\n  /*\r\n  const components = {\r\n    wrapper: ({ children, ...props }) => {\r\n      console.log(children)\r\n      //const shortcodesArray = React.Children.toArray(shortcodes)\r\n      //const childrenArray = React.Children.toArray(children)      \r\n      //const mdxArray = React.Children.toArray(mdx)\r\n      //const imagesArray = React.Children.toArray(BlogIndexPageImages)\r\n      //return <>{childrenArray}</>\r\n\r\n      const reversedChildren = React.Children.toArray(children).reverse()\r\n      return <>{reversedChildren}</>\r\n    },\r\n  }\r\n  */\r\n  //const shortcodes1 = { Link, PageThumbnail } // Works! \r\n \r\n  /*\r\n  {{\r\n    h1: (props) => <h1 {...props} className=\"text-xl font-light\" />\r\n    img: Image,\r\n  }}\r\n  */ \r\n\r\n  return (\r\n    <>\r\n    <div id=\"content\" className=\"container\">\r\n      {/* <h1>Blog</h1> */}\r\n      <div className=\"featured\">\r\n        <PageThumbnail langKey={langKey} date={allMdx.edges[0].node.frontmatter.date} author={(allMdx.edges[0].node.frontmatter?.author?.name || author.name)} category={allMdx.edges[0].node.frontmatter.category} pageLink={allMdx.edges[0].node.fields.slug} pageTitle={allMdx.edges[0].node.frontmatter.title} pageImage={allMdx.edges[0].node.frontmatter.featuredImage.childImageSharp.fluid}>{allMdx.edges[0].node.frontmatter.description}</PageThumbnail>\r\n        <div className=\"grid-3\">\r\n          <PageThumbnail langKey={langKey} date={allMdx.edges[1].node.frontmatter.date} author={(allMdx.edges[1].node.frontmatter?.author?.name || author.name)} category={allMdx.edges[1].node.frontmatter.category} pageLink={allMdx.edges[1].node.fields.slug} pageTitle={allMdx.edges[1].node.frontmatter.title} pageImage={allMdx.edges[1].node.frontmatter.featuredImage.childImageSharp.fluid}>{allMdx.edges[1].node.frontmatter.description}</PageThumbnail>\r\n          <PageThumbnail langKey={langKey} date={allMdx.edges[2].node.frontmatter.date} author={(allMdx.edges[2].node.frontmatter?.author?.name || author.name)} category={allMdx.edges[2].node.frontmatter.category} pageLink={allMdx.edges[2].node.fields.slug} pageTitle={allMdx.edges[2].node.frontmatter.title} pageImage={allMdx.edges[2].node.frontmatter.featuredImage.childImageSharp.fluid}>{allMdx.edges[2].node.frontmatter.description}</PageThumbnail>\r\n          <PageThumbnail langKey={langKey} date={allMdx.edges[3].node.frontmatter.date} author={(allMdx.edges[3].node.frontmatter?.author?.name || author.name)} category={allMdx.edges[3].node.frontmatter.category} pageLink={allMdx.edges[3].node.fields.slug} pageTitle={allMdx.edges[3].node.frontmatter.title} pageImage={allMdx.edges[3].node.frontmatter.featuredImage.childImageSharp.fluid}>{allMdx.edges[3].node.frontmatter.description}</PageThumbnail>\r\n        </div>\r\n      </div>\r\n      \r\n      <h2>Popular articles</h2>\r\n      <div className=\"grid-3\">\r\n        <PageThumbnail pageLink='./google/' pageTitle='Google'>Google</PageThumbnail>\r\n        <PageThumbnail pageLink='./wordpress/' pageTitle='WordPress'>WordPress</PageThumbnail>\r\n        <PageThumbnail pageLink='/jamstack/' pageTitle='Jamstack'>Jamstack</PageThumbnail>\r\n      </div>\r\n\r\n      <h2>Categories</h2>\r\n      <div className=\"grid-5\">\r\n        <PageThumbnail pageLink='./google/' pageTitle='Google'>Google</PageThumbnail>\r\n        <PageThumbnail pageLink='./wordpress/' pageTitle='WordPress'>WordPress</PageThumbnail>\r\n        <PageThumbnail pageLink='/jamstack/' pageTitle='Jamstack'>Jamstack</PageThumbnail>\r\n        <PageThumbnail pageLink='/seo/' pageTitle='SEO'>SEO</PageThumbnail>\r\n        <PageThumbnail pageLink='./mobile/' pageTitle='Mobile'>Mobile</PageThumbnail>\r\n      </div>\r\n\r\n      {/*\r\n      <MDXProvider components={components, shortcodes1} >\r\n        <MDXRenderer>{allMdx.body}</MDXRenderer>\r\n      </MDXProvider>\r\n      */}\r\n    </div>\r\n    </>\r\n  )\r\n\r\n}\r\n\r\n/**\r\n * GRAPHQL QUERY\r\n *                 ...GatsbyImageSharpFluidLimitPresentationSize\r\n */\r\nexport const BlogIndexDataQuery = graphql`\r\nquery BlogIndexQuery($id: String, $langKey: String) {\r\n  ###\r\n  # Blog page details\r\n  ###\r\n  mdx(id: { eq: $id }) {\r\n    id\r\n    body\r\n    fields {\r\n      slug\r\n      langKey\r\n    }\r\n    frontmatter {\r\n      title\r\n      date\r\n      dateFromNow: date(fromNow: true, locale: $langKey)\r\n      author {\r\n        name\r\n        bio\r\n        photo\r\n        links {\r\n          facebook\r\n          twitter\r\n          linkedin\r\n          website\r\n        }\r\n      }\r\n      published\r\n      category\r\n      description\r\n      tags\r\n      template\r\n      toc\r\n      featuredImage {\r\n        childImageSharp {\r\n          fluid(\r\n            maxHeight: 470\r\n            quality: 100\r\n          ) {\r\n            ...GatsbyImageSharpFluid_withWebp_tracedSVG\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  ###\r\n  # Posts details\r\n  ###\r\n  allMdx(limit: 2000, sort: {fields: [frontmatter___date], order: DESC}, filter: {fields: {langKey: {in: [$langKey]}, slug: {nin: [\"/blog/\",\"/fr/blog/\"]}}, fileAbsolutePath: {regex: \"/site-posts/\"}}) {\r\n    edges {\r\n      node {\r\n        id\r\n        body\r\n        fields {\r\n          slug\r\n          langKey\r\n        }\r\n        frontmatter {\r\n          title\r\n          date(fromNow: true, locale: $langKey)\r\n          author {\r\n            name\r\n          }\r\n          published\r\n          category\r\n          featuredImage {\r\n            childImageSharp {\r\n              fluid(maxWidth: 400, quality: 100) {\r\n                ...GatsbyImageSharpFluid_withWebp_tracedSVG\r\n              }\r\n            }\r\n          }\r\n          description\r\n          tags\r\n          template\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n  # BlogIndexPageImages: allFile(\r\n  #     filter: {relativePath: {in: [\r\n  #         \"guy-dumais-digital-jamstack.png\", \r\n  #        \"gatsby-astronaut.png\", \r\n  #        \"anatomy-of-a-google-cloud-function/anatomy-of-a-google-cloud-function.png\", \r\n  #        \"test-the-performance-of-your-mobile-site/test-the-performance-of-your-mobile-website-google-testmysite-screenshot.png\", \r\n  #        \"how-to-disable-emojis-in-wordpress/how-to-disable-emojis-in-wordpress.jpg\"\r\n  #      ]}}, sort: {order: ASC, fields: sourceInstanceName}) {\r\n  #        nodes {\r\n  #          absolutePath\r\n  #          sourceInstanceName\r\n  #          ...FileFragment\r\n  #        }\r\n  #      }\r\n  #  }\r\n  #\r\n  # fragment FileFragment on File {\r\n  #  childImageSharp {\r\n  #    fluid(maxWidth: 800, quality: 100) {\r\n  #      ...GatsbyImageSharpFluid\r\n  #      ...GatsbyImageSharpFluidLimitPresentationSize\r\n  #    }\r\n  #  }\r\n  # }\r\n`\r\n"],"sourceRoot":""}
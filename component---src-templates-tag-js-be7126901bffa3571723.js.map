{"version":3,"sources":["webpack:///./src/templates/tag.js"],"names":["locales","config","siteMetadata","Tags","pageContext","data","useContext","LocalesContext","langKey","i18nData","i18n","find","el","posti18n","post","i18nAllTags","allTags","tag","allMdx","edges","totalCount","tagHeader","title","description","lang","pageId","template","id","className","map","node","slug","fields","frontmatter","key","to","defaultLangKey","pageQuery"],"mappings":"mHAAA,sIAOQA,EAPR,OAOoBC,EAAOC,aAAnBF,QA4EOG,UAvEF,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KAAW,EAEZC,qBAAWC,KAA7BC,EAF8B,EAE9BA,QACFC,EAHgC,EAErBC,KACKC,MAAK,SAAAC,GAAE,OAAIA,EAAGJ,UAAYA,KAHV,EAIWC,aAJX,EAIWA,EAAUT,QAA7Ca,EAJwB,EAI9BC,KAAyBC,EAJK,EAIdC,QAEhBC,EAAQb,EAARa,IAN8B,EAORZ,EAAKa,OAA3BC,EAP8B,EAO9BA,MAAOC,EAPuB,EAOvBA,WACTC,EAAeD,EAAN,IAAoBP,GAClB,IAAfO,EAAmB,GAAK,KAG1B,OACE,oCACA,kBAAC,IAAD,CACAE,MAAOL,EACPM,YAAaF,EACbG,KAAMhB,EACNiB,OAAQR,EACRS,SAAS,cAGT,yBAAKC,GAAG,UAAUC,UAAU,aAC1B,yBAAKA,UAAU,aACb,4BAAKX,GACL,4BAAKI,IAEP,yBAAKO,UAAU,WACb,wBAAIA,UAAU,YACXT,EAAMU,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACJC,EAASD,EAAKE,OAAdD,KACAT,EAAUQ,EAAKG,YAAfX,MACR,OACE,wBAAIY,IAAKH,GACP,kBAAC,OAAD,CAAMI,GAAIJ,GAAOT,SAM3B,2BAAOK,GAAG,WACR,kBAAC,OAAD,CAAMQ,GAAK3B,IAAYR,EAAQoC,eAAiB,SAArC,IAAoD5B,EAApD,SAAqEO,OAgCjF,IAAMsB,EAAS","file":"component---src-templates-tag-js-be7126901bffa3571723.js","sourcesContent":["import React, { useContext } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link, graphql } from \"gatsby\"\r\nimport { LocalesContext } from '../components/locales/LocalesContextProvider'\r\nimport SEO from '../components/seo'\r\nimport '../styles/blog-tags.css'\r\nimport config from'../../gatsby-config'\r\nconst { locales } = config.siteMetadata\r\n\r\n/**\r\n * Tags Template component (JSX)\r\n */\r\nconst Tags = ({ pageContext, data }) => {\r\n\r\n  const { langKey, i18n } = useContext(LocalesContext)\r\n  const i18nData = i18n.find(el => el.langKey === langKey)\r\n  const { post: posti18n, allTags: i18nAllTags } = i18nData?.locales\r\n\r\n  const { tag } = pageContext\r\n  const { edges, totalCount } = data.allMdx\r\n  const tagHeader = `${totalCount} ${posti18n}${\r\n    totalCount === 1 ? \"\" : \"s\"\r\n  }`\r\n\r\n  return (\r\n    <>\r\n    <SEO\r\n    title={tag}\r\n    description={tagHeader}\r\n    lang={langKey}\r\n    pageId={tag}\r\n    template='page tags'\r\n  />\r\n\r\n    <div id=\"content\" className=\"container\">\r\n      <div className=\"pageTitle\">\r\n        <h1>{tag}</h1>\r\n        <h2>{tagHeader}</h2>\r\n      </div>\r\n      <div className=\"content\">\r\n        <ul className=\"taxonomy\">\r\n          {edges.map(({ node }) => {\r\n            const { slug } = node.fields\r\n            const { title } = node.frontmatter\r\n            return (\r\n              <li key={slug}>\r\n                <Link to={slug}>{title}</Link>\r\n              </li>\r\n            )\r\n          })}\r\n        </ul>\r\n      </div>\r\n      <aside id=\"sidebar\">\r\n        <Link to={ langKey === locales.defaultLangKey ? '/tags/' : `/${langKey}/tags`}>{i18nAllTags}</Link>\r\n      </aside>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nTags.propTypes = {\r\n  pageContext: PropTypes.shape({\r\n    tag: PropTypes.string.isRequired,\r\n  }),\r\n  data: PropTypes.shape({\r\n    allMdx: PropTypes.shape({\r\n      totalCount: PropTypes.number.isRequired,\r\n      edges: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          node: PropTypes.shape({\r\n            frontmatter: PropTypes.shape({\r\n              title: PropTypes.string.isRequired,\r\n            }),\r\n            fields: PropTypes.shape({\r\n              slug: PropTypes.string.isRequired,\r\n            }),\r\n          }),\r\n        }).isRequired\r\n      ),\r\n    }),\r\n  }),\r\n}\r\n\r\nexport default Tags\r\n\r\nexport const pageQuery = graphql`\r\nquery($tag: String, $langKey: String) {\r\n    allMdx(\r\n      limit: 2000\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: { \r\n        frontmatter: { tags: { in: [$tag] } },\r\n        fields: {langKey: {in: [$langKey]}}\r\n      }\r\n    ) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          fields {\r\n            slug\r\n            langKey\r\n          }\r\n          frontmatter {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`"],"sourceRoot":""}
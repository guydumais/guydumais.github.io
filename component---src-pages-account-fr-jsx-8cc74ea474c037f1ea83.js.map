{"version":3,"sources":["webpack:///./src/components/privateRoute.jsx","webpack:///./src/components/account/SocialLoginButton.jsx","webpack:///./src/components/account/profile.fr.jsx","webpack:///./src/components/account/login.fr.jsx","webpack:///./src/pages/account.fr.jsx"],"names":["PrivateRoute","Component","component","location","rest","config","siteMetadata","authentication","enable","isAuthenticated","pathname","navigate","SocialLoginButton","id","title","icon","onClick","event","preventDefault","handleLogin","pageMeta","description","Profile","context","useContext","StateContext","Helmet","className","user","displayName","emails","value","verified","_json","locale","FaGoogleIcon","faGoogle","FaFacebookIcon","faFacebook","FaTwitterIcon","faTwitter","FaLinkedInIcon","faLinkedin","Login","to","AccountLinks","pageContext","Account","authenticated","exact","path","window"],"mappings":"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","file":"component---src-pages-account-fr-jsx-8cc74ea474c037f1ea83.js","sourcesContent":["/**\r\n * PrivateRoute.\r\n * \r\n * Implement the Gatsby's WrapPageElement Browser API.\r\n * \r\n * @see: https://www.gatsbyjs.org/docs/browser-apis/\r\n *\r\n * @param\tComponent:\t  The Component (React component).\r\n * @param location:     The current url (relative path).\r\n * @param\tprops: \t\t    The Component properties.\r\n * \r\n * @return Component:\t\tLayout React Component (JSX).\r\n */\r\n\r\n /**\r\n  * Dependencies.\r\n  */\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { navigate } from 'gatsby'\r\nimport { isAuthenticated } from '../services/auth'\r\nimport config from '../../gatsby-config'\r\n\r\n/**\r\n * Conditional component.\r\n */\r\nconst PrivateRoute = ({ component: Component, location, ...rest }) => {\r\n\r\n  // Skip if authentication is disabled from config.\r\n  if (!config.siteMetadata.authentication.enable) {\r\n    navigate('/')\r\n    return null\r\n  }\r\n\r\n  // Redirect to login page if not authenticated.\r\n  if( !isAuthenticated() && location.pathname !== '/account/login' ) {\r\n    navigate('/account/login')\r\n    return null\r\n  }\r\n\r\n  // Skip if authentication disabled from config.\r\n  return <Component { ...rest } />\r\n\r\n}\r\n\r\n/**\r\n * Component properties.\r\n */\r\nPrivateRoute.propTypes = {\r\n  component: PropTypes.any.isRequired,\r\n}\r\n\r\nexport default PrivateRoute","/**\r\n * SOCIAL LOGIN BUTTON.\r\n */\r\n\r\n /**\r\n  * Dependencies.\r\n  */\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { handleLogin } from '../../services/auth'\r\n\r\n/**\r\n * Layout React component (JSX).\r\n */\r\nconst SocialLoginButton = ({ id, title, icon }) => {\r\n\r\n    return (\r\n        <button id={id} onClick={event => {\r\n            event.preventDefault()\r\n            handleLogin(event)\r\n        }}>\r\n        {icon} {title}\r\n        </button>\r\n    )\r\n\r\n}\r\n\r\nSocialLoginButton.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n}\r\n  \r\nexport default SocialLoginButton","/**\r\n * PROFILE\r\n * \r\n * @file        profile.jsx\r\n * @location    components\r\n */\r\n\r\n/**\r\n * Dependencies.\r\n */\r\nimport React, {useContext} from 'react'\r\nimport { StateContext } from '../../.gatsby/GlobalContextProvider'\r\nimport { Helmet } from 'react-helmet'\r\nimport '../../styles/profile.css'\r\n\r\n/**\r\n * Page Meta.\r\n */\r\nconst pageMeta = {\r\n  title: 'Profil',\r\n  description: 'Contenu de la page Profil...',\r\n}\r\n\r\n/**\r\n * React component (JSX).\r\n */\r\n//class Profile extends React.Component {\r\nconst Profile = () => {\r\n\r\n  /**\r\n   * Authentication.\r\n   */\r\n  const context = useContext(StateContext)\r\n\r\n  return (\r\n    <>\r\n      <Helmet title={pageMeta.title} />\r\n      <div className=\"content\">\r\n        <h2>{pageMeta.title}</h2>\r\n        <ul>\r\n          <li>Nom: {context.user.displayName}</li>\r\n          <li>Courriel: {context.user.emails[0].value} ({context.user.emails[0].verified ? 'Vérifié' : 'Non vérifié'})</li>\r\n          <li>Langue: {context.user._json.locale}</li>\r\n        {/*\r\n        Object.keys(context.user).map((key, i) =>\r\n          <li key={i}>{key}: {context.user[key]}</li>\r\n        )\r\n        */}\r\n        </ul>\r\n      </div>\r\n    </>\r\n  )\r\n\r\n}\r\n\r\nProfile.pageMeta = pageMeta\r\n\r\nexport default Profile","/**\r\n * LOGIN.\r\n * \r\n * @file        login.jsx\r\n * @location    components\r\n */\r\n\r\n/**\r\n * Dependencies.\r\n */\r\nimport React from 'react'\r\nimport { Link as GatsbyLink, navigate } from 'gatsby'\r\nimport SocialLoginButton from './SocialLoginButton'\r\n//import loadOneTapClient, { unloadOneTapClient } from '../google/OneTapClient'\r\nimport config from '../../../gatsby-config'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faGoogle, faFacebook, faTwitter, faLinkedin } from '@fortawesome/free-brands-svg-icons'\r\nimport { Helmet } from \"react-helmet\"\r\nimport '../../styles/login.css'\r\n\r\n/**\r\n * FA ICON COMPONENTS.\r\n */\r\nconst FaGoogleIcon = () => <FontAwesomeIcon icon={faGoogle} />\r\nconst FaFacebookIcon = () => <FontAwesomeIcon icon={faFacebook} />\r\nconst FaTwitterIcon = () => <FontAwesomeIcon icon={faTwitter} />\r\nconst FaLinkedInIcon = () => <FontAwesomeIcon icon={faLinkedin} />\r\n\r\n/**\r\n * Page Meta.\r\n */\r\nconst pageMeta = {\r\n  title: 'Se connecter',\r\n  description: 'Contenu de se connecter...',\r\n}\r\n\r\n/**\r\n * LOGIN React Component (JSX).\r\n */\r\n//class Login extends React.Component {\r\nconst Login = () => {\r\n\r\n  if (!config.siteMetadata.authentication.enable) {\r\n    navigate(-1)\r\n    return null\r\n  }\r\n\r\n  // Skip page if already logged in.\r\n  /*\r\n  if( isLoggedIn() ) {\r\n    navigate(`/account/profile`)\r\n  }\r\n  */\r\n\r\n  // Show login page.\r\n  return (\r\n    <>\r\n      <Helmet title={pageMeta.title} />\r\n      <div className=\"box\">\r\n        <h2>Connecter</h2>\r\n        <p>Sélectionnez votre réseau social préféré pour vous connecter:</p>\r\n        <SocialLoginButton id=\"google\" title=\"Google\" icon={<FaGoogleIcon />} />\r\n        <SocialLoginButton id=\"facebook\" title=\"Facebook\" icon={<FaFacebookIcon />} />\r\n        <SocialLoginButton id=\"twitter\" title=\"Twitter\" icon={<FaTwitterIcon />} />\r\n        <SocialLoginButton id=\"linkedin\" title=\"LinkedIn\" icon={<FaLinkedInIcon />} />\r\n        <p>\r\n        <GatsbyLink id=\"privacy\" to='/fr/confidentialite/'>\r\n          Politique de confidentialité\r\n        </GatsbyLink>\r\n        </p>\r\n      </div>\r\n    </>\r\n  )\r\n\r\n}\r\n\r\nLogin.pageMeta = pageMeta\r\n\r\nexport default Login\r\n","/**\r\n * ACCOUNT\r\n * \r\n * @file        src/pages/account.jsx\r\n */\r\n\r\n/**\r\n * Dependencies.\r\n */\r\nimport React, { useContext } from 'react'\r\nimport { Link, navigate } from 'gatsby'\r\nimport { Router } from \"@reach/router\"\r\nimport PrivateRoute from '../components/privateRoute'\r\nimport Profile from '../components/account/profile.fr'\r\nimport Login from '../components/account/login.fr'\r\nimport { StateContext } from '../.gatsby/GlobalContextProvider'\r\nimport config from '../../gatsby-config'\r\n\r\n/**\r\n * Page Meta.\r\n */\r\nconst pageMeta = {\r\n  title: 'Compte',\r\n  description: 'Compte d\\'utilisateur',\r\n}\r\n \r\nconst AccountLinks = ({pageContext}) => {\r\n  return (<><Link to=\"/fr/account/profile\">Profil</Link> / <Link to=\"/fr/account/logout\">Logout</Link></>)\r\n}\r\n\r\n/**\r\n * Page (React component - JSX).\r\n */\r\nconst Account = () => {\r\n\r\n    const context = useContext(StateContext)\r\n\r\n    // Skip if authentication disabled.\r\n    if (!config.siteMetadata.authentication.enable) {\r\n      if( typeof window !== \"undefined\" ) navigate(-1)\r\n      return null\r\n    }\r\n\r\n    // Account page.\r\n    return (\r\n      <>\r\n      <div id=\"content\" className=\"container col\">\r\n      <div className=\"content\">\r\n        <h1>{pageMeta.title}</h1>\r\n        {context.authenticated ? (\r\n        <>\r\n        <p>Bienvenue dans votre compte {context.user.displayName}.</p>\r\n        <p><AccountLinks/></p>\r\n        </>\r\n        )\r\n        :\r\n        <p>En utilisant notre site web, vous acceptez notre <Link to=\"/fr/confidentialite/\">politique de confidentialité</Link> et nos <Link to=\"/fr/termes-et-conditions/\">Termes et conditions</Link>.</p>\r\n        }\r\n        <Router>\r\n          <PrivateRoute exact path=\"/fr/account/profile\" component={Profile} />\r\n          <Login path=\"/fr/account/login\" />\r\n        </Router>\r\n      </div>\r\n    </div>\r\n      </>\r\n    )\r\n\r\n}\r\n\r\nAccount.pageMeta = pageMeta\r\n\r\nexport default Account"],"sourceRoot":""}